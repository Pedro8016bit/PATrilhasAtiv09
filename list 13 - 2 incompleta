using System;
using System.Linq;
using System.Threading.Tasks;

namespace PAtrilhas09
{
    class nuBankiss
    {
        private static int proximo_Num = 1000;
        public int numConta { get; private set; }
        
        public double saldo{get; private set;}
        private bool contaAtiva;
        private string email;
        private string senha;

        public string nome { get; private set; }
        public int idade { get; private set; }

        public nuBankiss()
        {
            this.numConta = proximo_Num++;
            saldo = 0;
            contaAtiva = false;
        }

        public void abrConta()
        {
            Console.WriteLine("Digite seu nome:");
            this.nome = Console.ReadLine();

            Console.WriteLine("Digite sua idade:");
            this.idade = int.Parse(Console.ReadLine());

            Console.WriteLine("Digite seu email:");
            this.email = Console.ReadLine();

            Console.WriteLine("Digite sua senha:");
            this.senha = Console.ReadLine();
            
            contaAtiva = true;
            Console.WriteLine("Conta criada com sucesso! Número da conta: " + this.numConta);
        }
        
        public double inserSaldo()
        {
        	Console.WriteLine("Insira o valor");
        	this.saldo = double.Parse(Console.ReadLine());
        	return saldo;
        }
     
    }

    class Program
    {
        public static void Main(string[] args)
        {
        	int esc2 = 0;
            Console.WriteLine("Você quer abrir uma conta?");
            Console.WriteLine("sim  /  não");

            string esc = Console.ReadLine();
            

            nuBankiss conta = new nuBankiss();

            if (esc.ToLower() == "sim")
            {
                Console.WriteLine("Aguarde...");
                Task.Delay(3000).Wait();
                Console.WriteLine("");

                conta.abrConta();
                Console.WriteLine("Aguarde...");
                Task.Delay(3000).Wait();
                Console.Clear();
            }
            else
            {
            	Console.WriteLine("Até mais!!!");
            	Console.WriteLine("Aguarde fechando programa...");
                Task.Delay(3000).Wait();
            	return;
            }
            
            while(true)
            {
            	double retirada = 0;
            	double saldoso = conta.saldo;
            	double ja_tirei = saldoso - retirada;
            	Console.WriteLine("Nome: " + conta.nome);
            	Console.WriteLine("1- Inserir saldo \n2- Realizar saque \n3- Fechar conta \n4- Editar conta \n5- Sair \nSaldo atual:" + ja_tirei);
            	esc2 = int.Parse(Console.ReadLine());
            
            	switch(esc2)
            	{
            				   case 1: conta.inserSaldo();
            				   Console.Clear();
            				   break;
            				   case 2: Console.WriteLine("digite o valor da retirada:");
            				   retirada = double.Parse(Console.ReadLine());
            				   
            				   Console.Clear();
            				   break;
            				   case 3: 
            				   Console.WriteLine("Aguarde o fechamento ");
            				   for (int j = 0; j < 3; j++)
            				   {
            				   	for (int i = 0;  i < 3; i++)
            				   		{
            				   			Console.Write(".");
            				   			Task.Delay(1000).Wait();
            				   		}
            				   	Console.Clear();
            				   }
            				   return;
            				   break;
            				   case 4: conta.abrConta();
            				   Console.Clear();
            				   break;
            				   case 5: return;
            				   
            	}
            	
            	
            }

            Console.Write("Press any key to continue . . . ");
            Console.ReadKey(true);
        }
    }
}
